import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-UHqMiyo5.js";const e={},p=t(`<p style="text-align:center;font-size:150px;">优美的代码和好用的功能都很重要</p><h2 id="复杂列表-列表和item的逻辑要分开-不要混到一起" tabindex="-1"><a class="header-anchor" href="#复杂列表-列表和item的逻辑要分开-不要混到一起"><span>复杂列表, 列表和item的逻辑要分开，不要混到一起</span></a></h2><blockquote><ol><li>避免使用过多ref</li><li>避免代码臃肿逻辑混乱</li><li>降低单个组件的复杂度（列表的逻辑和item的逻辑写到一起，会把组件复杂度提升一个量级）</li><li>让你的代码天然拥有一道隔离墙</li><li>item的状态值可以挂载到item组件上，而不是侵入性的挂载到item对应的数据上</li></ol></blockquote><p>示例:</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in list<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item.id<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">:ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\`name-\${item.id}\`<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onClick(item)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ item.name }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">list</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> Array<span class="token punctuation">,</span>
      <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">name-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例改进:</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token comment">&lt;!-- 子组件 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>name<span class="token punctuation">&quot;</span></span> <span class="token attr-name">@click</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onClick<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{item.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
    <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">onClick</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>name
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>

<span class="token comment">&lt;!-- 父组件 --&gt;</span>
<span class="token comment">&lt;!-- 略 --&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="聚合代码" tabindex="-1"><a class="header-anchor" href="#聚合代码"><span>聚合代码</span></a></h2><blockquote><ol><li>合理拆分的同时要合理内聚, 相关的逻辑尽量写到一起</li><li>使用 this.$once(&#39;hook:xxx&#39;) 帮助你聚合必要的逻辑</li></ol></blockquote><p>示例1 hover到任务上出现预览弹窗:</p><p>代码1 使用k-task-preview组件的地方:</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 省略很多 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>k-task-preview</span>
      <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getPopoverStatus(task.id).showPreview<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getPopoverStatus(task.id).showPreview<span class="token punctuation">&quot;</span></span>

      <span class="token attr-name">:task</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>task<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">:isLoading</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>getPopoverStatus(task.id).isLoading<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>k-task-preview</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码2 控制showPreview的地方, 在一个mixin里:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token keyword">async</span> <span class="token function">handleMouseenterTask</span><span class="token punctuation">(</span><span class="token parameter">task<span class="token punctuation">,</span> status</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 任务预览</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        status<span class="token punctuation">.</span>showPreview <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>代码3 调用handleMouseenterTask的地方:</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>draggable</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 省略很多代码 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span>
      <span class="token attr-name">@mouseenter</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleMouseenterTask(task, getPopoverStatus(task.id), true)<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">@mouseleave</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>handleMouseleaveTask($event, getPopoverStatus(task.id))<span class="token punctuation">&quot;</span></span>
    <span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>draggable</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为了实现任务的hover预览，把基础的代码分在了3个地方, 如果再结合3个视图，外加一个项目集，可见代码会有多分散</p><p>示例1 改进:</p><div class="language-vue line-numbers-mode" data-ext="vue" data-title="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>k-task-preview</span>
    <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isShowPreview<span class="token punctuation">&quot;</span></span>
    <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>isShowPreview<span class="token punctuation">&quot;</span></span>
  <span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>k-task-preview</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> sdk <span class="token keyword">from</span> <span class="token string">&#39;@rishiqing/kite-design/sdk&#39;</span>

<span class="token keyword">import</span> <span class="token punctuation">{</span>
  getParentTreeNodeContentElement<span class="token punctuation">,</span>
<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./utils&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>
  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">isShowPreview</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">methods</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token function">onMouseEnter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// 任务预览</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>timer <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>isShowPreview <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">onMouseLeave</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">this</span><span class="token punctuation">.</span>isShowPreview <span class="token operator">=</span> <span class="token boolean">false</span>
      <span class="token function">clearTimeout</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>timer<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">mounted</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> parentEl <span class="token operator">=</span> <span class="token function">getParentTreeNodeContentElement</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$el<span class="token punctuation">.</span>parentElement

    parentEl<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;mouseenter&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onMouseEnter<span class="token punctuation">)</span>
    parentEl<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;mouseleave&#39;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>onMouseLeave<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>改进之后, 想要任务预览的地方，直接引入这个组件即可.</p><p>还可以参考任务完成数量/任务总数组件的重构.</p><h2 id="合理利用-函数组件-jsx-的优势" tabindex="-1"><a class="header-anchor" href="#合理利用-函数组件-jsx-的优势"><span>合理利用 函数组件/JSX 的优势</span></a></h2><blockquote><ol><li>函数组件可以脱离<code>.vue</code>文件, 可以在js文件里灵活的完成组件的开发</li><li>当你有一批组件有很多共通点, 但又有那么点不一样, 这种时候使用函数组件来开发准没错. 比如筛选组件, 列表视图的字段</li></ol></blockquote><h2 id="用好provide和inject" tabindex="-1"><a class="header-anchor" href="#用好provide和inject"><span>用好provide和inject</span></a></h2><blockquote><ol><li>局部状态管理<code>new Vue()</code></li><li>局部共享某些对象</li><li>不要没了vuex就感觉寸步难行, vuex就是一个被封装的<code>new Vue()</code></li></ol></blockquote><h2 id="别过分相信mixin的魔力" tabindex="-1"><a class="header-anchor" href="#别过分相信mixin的魔力"><span>别过分相信mixin的魔力</span></a></h2><blockquote><ol><li>避免中了mixin的毒, mixin太多，你的代码看似拆分了，共享了，实则可能变得更乱</li><li>通过mixin引入代码, 隔离性太差, 无法实现命名空间, 容易导致引用混乱</li><li>尽量做组件拆分</li></ol></blockquote><h2 id="原生dom的能力" tabindex="-1"><a class="header-anchor" href="#原生dom的能力"><span>原生DOM的能力</span></a></h2><blockquote><ol><li>别忘了原生的能力, 原生dom在某些时候是可以辅助我们办事的.</li></ol></blockquote><p>比如上面提到的任务预览组件, 我猜测之前没有把逻辑写到一起的原因，很大程度就是为了能在template里写@mouseenter监听事件, 而没有想到要通过原生的方式监听</p><h2 id="函数传参-及时止损" tabindex="-1"><a class="header-anchor" href="#函数传参-及时止损"><span>函数传参, 及时止损</span></a></h2><blockquote><ol><li>超过3个参数，请考虑用对象传参</li><li>在加参数的过程中，不要想着如果改成对象，其他地方也要调整麻烦，干脆直接往后加，要及时止损</li></ol></blockquote><p>下面是一个函数的传参, 9个参数</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">sdkTaskEventBind</span><span class="token punctuation">(</span>
  <span class="token parameter">oldInsertSubscription<span class="token punctuation">,</span>
  oldRemoveSubscription<span class="token punctuation">,</span>
  oldUpdateSubscription<span class="token punctuation">,</span>
  oneRxdbListIns<span class="token punctuation">,</span>
  theSdk<span class="token punctuation">,</span>
  oneGanttLibIns<span class="token punctuation">,</span>
  loadGanttDependsDebounceFun<span class="token punctuation">,</span>
  vm<span class="token punctuation">,</span>
  isGroupByResponsibility<span class="token punctuation">,</span></span>
<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="杜绝复杂组件-开发过程中-能拆就拆" tabindex="-1"><a class="header-anchor" href="#杜绝复杂组件-开发过程中-能拆就拆"><span>杜绝复杂组件, 开发过程中, 能拆就拆</span></a></h2><blockquote><ol><li>不要一个<code>.vue</code>文件到底</li><li>不要以为把template, script, style分三个文件写就是拆分了</li><li>复杂的组件是要在逻辑，代码，数据这三大块上做拆分</li><li>合理利用这些技巧, 合理组织和拆分代码</li></ol></blockquote><h2 id="杜绝面条代码" tabindex="-1"><a class="header-anchor" href="#杜绝面条代码"><span>杜绝面条代码</span></a></h2><blockquote><ol><li>面条代码都是没有经过太多思考就写出来的代码</li><li>面条代码没有灵魂</li></ol></blockquote><p>有一个文件: @apps/rishiqing-plan/src/views/module-task/share/mixin-header.js, 为了实现列表宽度可调</p><h2 id="其他提示" tabindex="-1"><a class="header-anchor" href="#其他提示"><span>其他提示</span></a></h2><blockquote><ol><li>有if的地方，提前return, 不要一个if包裹一大坨代码</li><li>尽量避免使用stopPropagation, 可以在event上加一个标记用于过滤.</li><li>v-on=&quot;$listeners&quot; 帮助你更好的区分组件的功能</li></ol></blockquote>`,41),o=[p];function l(i,c){return s(),a("div",null,o)}const k=n(e,[["render",l],["__file","写vue的一些建议.html.vue"]]),d=JSON.parse('{"path":"/posts/%E5%86%99vue%E7%9A%84%E4%B8%80%E4%BA%9B%E5%BB%BA%E8%AE%AE.html","title":"写vue的一些建议","lang":"en-US","frontmatter":{"title":"写vue的一些建议","date":"2023-03-06T08:08:07.000Z","tag":["vue","开发建议"],"description":"优美的代码和好用的功能都很重要 复杂列表, 列表和item的逻辑要分开，不要混到一起 避免使用过多ref 避免代码臃肿逻辑混乱 降低单个组件的复杂度（列表的逻辑和item的逻辑写到一起，会把组件复杂度提升一个量级） 让你的代码天然拥有一道隔离墙 item的状态值可以挂载到item组件上，而不是侵入性的挂载到item对应的数据上 示例: 示例改进: 聚合...","head":[["meta",{"property":"og:url","content":"https://nodepie.com/posts/%E5%86%99vue%E7%9A%84%E4%B8%80%E4%BA%9B%E5%BB%BA%E8%AE%AE.html"}],["meta",{"property":"og:site_name","content":"NodePie"}],["meta",{"property":"og:title","content":"写vue的一些建议"}],["meta",{"property":"og:description","content":"优美的代码和好用的功能都很重要 复杂列表, 列表和item的逻辑要分开，不要混到一起 避免使用过多ref 避免代码臃肿逻辑混乱 降低单个组件的复杂度（列表的逻辑和item的逻辑写到一起，会把组件复杂度提升一个量级） 让你的代码天然拥有一道隔离墙 item的状态值可以挂载到item组件上，而不是侵入性的挂载到item对应的数据上 示例: 示例改进: 聚合..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"article:author","content":"QinYang"}],["meta",{"property":"article:tag","content":"vue"}],["meta",{"property":"article:tag","content":"开发建议"}],["meta",{"property":"article:published_time","content":"2023-03-06T08:08:07.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"写vue的一些建议\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-06T08:08:07.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"QinYang\\",\\"url\\":\\"https://nodepie.com\\"}]}"]]},"headers":[{"level":2,"title":"复杂列表, 列表和item的逻辑要分开，不要混到一起","slug":"复杂列表-列表和item的逻辑要分开-不要混到一起","link":"#复杂列表-列表和item的逻辑要分开-不要混到一起","children":[]},{"level":2,"title":"聚合代码","slug":"聚合代码","link":"#聚合代码","children":[]},{"level":2,"title":"合理利用 函数组件/JSX 的优势","slug":"合理利用-函数组件-jsx-的优势","link":"#合理利用-函数组件-jsx-的优势","children":[]},{"level":2,"title":"用好provide和inject","slug":"用好provide和inject","link":"#用好provide和inject","children":[]},{"level":2,"title":"别过分相信mixin的魔力","slug":"别过分相信mixin的魔力","link":"#别过分相信mixin的魔力","children":[]},{"level":2,"title":"原生DOM的能力","slug":"原生dom的能力","link":"#原生dom的能力","children":[]},{"level":2,"title":"函数传参, 及时止损","slug":"函数传参-及时止损","link":"#函数传参-及时止损","children":[]},{"level":2,"title":"杜绝复杂组件, 开发过程中, 能拆就拆","slug":"杜绝复杂组件-开发过程中-能拆就拆","link":"#杜绝复杂组件-开发过程中-能拆就拆","children":[]},{"level":2,"title":"杜绝面条代码","slug":"杜绝面条代码","link":"#杜绝面条代码","children":[]},{"level":2,"title":"其他提示","slug":"其他提示","link":"#其他提示","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":3.97,"words":1190},"filePathRelative":"posts/写vue的一些建议.md","localizedDate":"March 6, 2023","excerpt":"<p style=\\"text-align: center; font-size: 150px;\\">优美的代码和好用的功能都很重要</p>\\n<h2>复杂列表, 列表和item的逻辑要分开，不要混到一起</h2>\\n<blockquote>\\n<ol>\\n<li>避免使用过多ref</li>\\n<li>避免代码臃肿逻辑混乱</li>\\n<li>降低单个组件的复杂度（列表的逻辑和item的逻辑写到一起，会把组件复杂度提升一个量级）</li>\\n<li>让你的代码天然拥有一道隔离墙</li>\\n<li>item的状态值可以挂载到item组件上，而不是侵入性的挂载到item对应的数据上</li>\\n</ol>\\n</blockquote>","autoDesc":true}');export{k as comp,d as data};
